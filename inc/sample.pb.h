// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sample.proto

#ifndef PROTOBUF_sample_2eproto__INCLUDED
#define PROTOBUF_sample_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sample_2eproto();
void protobuf_AssignDesc_sample_2eproto();
void protobuf_ShutdownFile_sample_2eproto();

class Sample;

// ===================================================================

class Sample : public ::google::protobuf::Message {
 public:
  Sample();
  virtual ~Sample();

  Sample(const Sample& from);

  inline Sample& operator=(const Sample& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sample& default_instance();

  void Swap(Sample* other);

  // implements Message ----------------------------------------------

  Sample* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sample& from);
  void MergeFrom(const Sample& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float input = 1 [packed = true];
  inline int input_size() const;
  inline void clear_input();
  static const int kInputFieldNumber = 1;
  inline float input(int index) const;
  inline void set_input(int index, float value);
  inline void add_input(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      input() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_input();

  // repeated float output = 2 [packed = true];
  inline int output_size() const;
  inline void clear_output();
  static const int kOutputFieldNumber = 2;
  inline float output(int index) const;
  inline void set_output(int index, float value);
  inline void add_output(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      output() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_output();

  // @@protoc_insertion_point(class_scope:Sample)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< float > input_;
  mutable int _input_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > output_;
  mutable int _output_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sample_2eproto();
  friend void protobuf_AssignDesc_sample_2eproto();
  friend void protobuf_ShutdownFile_sample_2eproto();

  void InitAsDefaultInstance();
  static Sample* default_instance_;
};
// ===================================================================


// ===================================================================

// Sample

// repeated float input = 1 [packed = true];
inline int Sample::input_size() const {
  return input_.size();
}
inline void Sample::clear_input() {
  input_.Clear();
}
inline float Sample::input(int index) const {
  return input_.Get(index);
}
inline void Sample::set_input(int index, float value) {
  input_.Set(index, value);
}
inline void Sample::add_input(float value) {
  input_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
Sample::input() const {
  return input_;
}
inline ::google::protobuf::RepeatedField< float >*
Sample::mutable_input() {
  return &input_;
}

// repeated float output = 2 [packed = true];
inline int Sample::output_size() const {
  return output_.size();
}
inline void Sample::clear_output() {
  output_.Clear();
}
inline float Sample::output(int index) const {
  return output_.Get(index);
}
inline void Sample::set_output(int index, float value) {
  output_.Set(index, value);
}
inline void Sample::add_output(float value) {
  output_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
Sample::output() const {
  return output_;
}
inline ::google::protobuf::RepeatedField< float >*
Sample::mutable_output() {
  return &output_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sample_2eproto__INCLUDED
